{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-----------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Downloading FASTQ files from the SRA\n",
    "\n",
    "This notebook walks you through the final steps in downloading FASTQ files from the SRA. You should have already \"prefetched\" the data in the last homework assignment. This is important when you need to download a large number of files from the SRA for a project. You only have a small subset of metagenomes, but since it is good practice, we will prefetch, and then use fasterq-dump to download the FASTQ R1 and R2 (forward and reverse) read files. \n",
    "\n",
    "-----\n",
    "\n",
    "Sections:\n",
    "1. Using sra-tools and fasterq-dump command to download FASTQ files from the SRA (after prefetch)\n",
    "2. Checking that your FASTQ files have been downloaded.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Section 1: Downloading FASTQ files for your accessions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Go to into the directory where you prefetched the accessions in your xfile\n",
    "netid = \"YOUR_NETID\"\n",
    "%cd /xdisk/bhurwitz/bh_class/$netid/assignments/04_intro_hpc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Now let's move all of the pre-fetched directories into the work directory for our new section\n",
    "# Note we will also move our XFILE here too, so our script below can use it.\n",
    "!mv ERR* ../05_getting_data\n",
    "!mv x* ../05_getting_data\n",
    "cd ../05_getting_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note: If you got an error from the commands above, you will need to go back to the previous homework assignment and see what went wrong."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let's create the script to get the FASTQ file by using Python to write it for us.\n",
    "# Be sure to replace the following with the right information below\n",
    "# YOUR_NETID\n",
    "# YOUR_XFILE\n",
    "my_code = '''#!/bin/bash\n",
    "#SBATCH --ntasks=1\n",
    "#SBATCH --nodes=1             \n",
    "#SBATCH --time=10:00:00   \n",
    "#SBATCH --partition=standard\n",
    "#SBATCH --account=bh_class\n",
    "#SBATCH --array=0-4                         \n",
    "#SBATCH --output=Job-%a.out\n",
    "#SBATCH --cpus-per-task=1                   \n",
    "#SBATCH --mem=4G                            \n",
    " \n",
    "pwd; hostname; date\n",
    " \n",
    "names=($(cat /xdisk/bhurwitz/YOUR_NETID/assignments/05_getting_data/YOUR_XFILE))\n",
    "\n",
    "echo ${names[${SLURM_ARRAY_TASK_ID}]}\n",
    "\n",
    "apptainer run /contrib/singularity/shared/bhurwitz/sra-tools-3.0.3.sif fasterq-dump --split-files \\\n",
    "    ${names[${SLURM_ARRAY_TASK_ID}]}\n",
    "'''\n",
    "\n",
    "with open('fasterq_parallel.sh', mode='w') as file:\n",
    "    file.write(my_code)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we can run fasterq-dump to get the FASTQ R1 and R2 files. This uses the directories with the ERR accession number that we downloaded in the last homework.\n",
    "\n",
    "Here's the fasterq-dump [documentation](https://github.com/ncbi/sra-tools/wiki/HowTo:-fasterq-dump).\n",
    "\n",
    "First, let's double check your script. Did you replace YOUR_NETID and YOUR_XFILE?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!chmod +w fasterq_parallel.sh\n",
    "!cat fasterq_parallel.sh"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# now let's run it!\n",
    "!sbatch ./fasterq_parallel.sh"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remember that you can check if it is running using the squeue command\n",
    "!squeue --job=YOUR_JOBID"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Section 2 Checking your FASTQ files\n",
    "\n",
    "Your code will take a little time to get \"picked up\" by the HPC and move from PD (pending) to R (running). Be sure to come back and check your directory to be sure that you have R1 and R2 files for each of your accessions. You can run this by returning to this notebook, or by using the shell."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Go to into the directory where you prefetched the accessions in your xfile\n",
    "netid = \"YOUR_NETID\"\n",
    "%cd /xdisk/bhurwitz/bh_class/$netid/assignments/05_getting_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Check to see if you have an R1 and R2 file for each of your accessions (10 total). Do they have a size > 0?\n",
    "!ls -l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Check one of the files to see if you have fastq data.\n",
    "!head -4 ERR*r1.fastq"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-----"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  },
  "vscode": {
   "interpreter": {
    "hash": "df955ce39d0f31d56d4bb2fe0a613e5326ba60723fd33d8303a3aede8f65715c"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
